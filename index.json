[{"uri":"https://naveenlr92.github.io/git/","title":"Git","tags":[],"description":"","content":"GIT Tutorial GIT Tutorial GIT basics we start from here.\n"},{"uri":"https://naveenlr92.github.io/bash/","title":"Bash Script","tags":[],"description":"","content":"Bash Script Tutorial Bash Script Tutorial Bash Script basics we start from here.\n"},{"uri":"https://naveenlr92.github.io/","title":"Learn Documentation","tags":[],"description":"","content":"Documented by Naveen This document gives  GIT Tutorial Bash scripting  "},{"uri":"https://naveenlr92.github.io/posts/my-first-post/","title":"My First Post","tags":[],"description":"","content":""},{"uri":"https://naveenlr92.github.io/posts/","title":"Posts","tags":[],"description":"","content":""},{"uri":"https://naveenlr92.github.io/bash/examples/","title":"Bash Script Examples","tags":[],"description":"","content":"How to read data from text files "},{"uri":"https://naveenlr92.github.io/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://naveenlr92.github.io/bash/examples/how-to-read-data-from-text-files/1.-read_data_from_text_files/","title":"read data from text files","tags":[],"description":"","content":"How to read data from text files Here\u0026rsquo;s how to extract data from a text file such as reading in a list of servers to test connectivity to them.\nTarget :\n Are reachable from your server Have name resolution working for them Are listening on port 22 (for SSH)  You also need to report the status to the project team for which you\u0026rsquo;re required to submit in a spreadsheet format. If you\u0026rsquo;re working with dozens of servers and you need to repeat these tests on different days, it is definitely useful to think about an automated way of doing so.\nThe input file\nAnd this is the CSV file:\nServerName,IP m2.example.com,192.168.2.99 xtower.example.com,192.168.2.111 win2k16.example.com,192.168.101.41 control.example.com,192.168.101.200 node1.example.com,192.168.101.201 node2.example.com,192.168.101.202 node3.example.com,192.168.101.203 node4.example.com,192.168.101.204 node5.example.com,192.168.101.205\nThe script\n#!/usr/bin/bash input_file=hosts.csv output_file=hosts_tested.csv echo \u0026#34;ServerName,IP,PING,DNS,SSH\u0026#34; \u0026gt; $output_file cat $input_file | grep -v ServerName | while read line do host=$(echo $line | cut -f1 -d\u0026#39;,\u0026#39;) ip=$(echo $line | cut -f2 -d\u0026#39;,\u0026#39;) ping -c 3 $ip \u0026gt; /dev/null if [ $? -eq 0 ];then ping_status=\u0026#34;OK\u0026#34; else ping_status=\u0026#34;FAIL\u0026#34; fi nslookup $host \u0026gt; /dev/null if [ $? -eq 0 ];then dns_status=\u0026#34;OK\u0026#34; else dns_status=\u0026#34;FAIL\u0026#34;25 fi nc -z -w3 $ip 22 \u0026gt; /dev/null if [ $? -eq 0 ];then ssh_status=\u0026#34;OK\u0026#34; else ssh_status=\u0026#34;FAIL\u0026#34; fi echo \u0026#34;Host = $hostIP = $ip\u0026#34; PING_STATUS = $ping_status DNS_STATUS = $dns_status SSH_STATUS = $ssh_status echo \u0026#34;$host,$ip,$ping_status,$dns_status,$ssh_status\u0026#34; \u0026gt;\u0026gt; $output_file done The following line items explain the script entries above:\nLine 6: Initialize the output file with the header and three new fields to represent the status of reachability via ping and name resolution\nLine 8: Read input file line by line using a while loop, ignoring the first line (header)\nLines 10 and 11: Extract the values for host and IP. cut gets the first and second fields using comma as the delimiter\nLines 13 to 32: Run the ping, nslookup, and nc commands, sending the output to null because we are just interested in the return status from the commands\nLine 34: Send the output to stdout for the person running the script\nLine 35: Send the data to the output file with the three new columns (ping_status, dns_status, and ssh_status)\noutput file\n"},{"uri":"https://naveenlr92.github.io/tags/","title":"Tags","tags":[],"description":"","content":""}]